name: release-build

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  COS_ACCESS_KEY_ID: ${{ secrets.COS_ACCESS_KEY_ID }}
  COS_SECRET_ACCESS_KEY: ${{ secrets.COS_SECRET_ACCESS_KEY }}
  COS_BUCKET:          ${{ secrets.COS_BUCKET }}
  COS_ENDPOINT:        ${{ secrets.COS_ENDPOINT }}

jobs:
  # ────────────────────────────
  # Stage: Build & Deploy Wheels
  # ────────────────────────────
  build-and-deploy-linux:
    name: Build & Deploy wheels (manylinux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Cleanup runner
        run: |
          pip cache purge
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.3
        env:
          CIBW_ENVIRONMENT: "TORCH_VERSION_SPECIFIER='>=2.1'"
          CIBW_BEFORE_BUILD: "pip install torch>=2.1 torchvision -f https://download.pytorch.org/whl/torch_stable.html && pip install -r requirements.txt"
          CIBW_MANYLINUX_X86_64_IMAGE: "aihwkit/manylinux2014_x86_64_aihwkit"
          CIBW_REPAIR_WHEEL_COMMAND: "auditwheel repair -w {dest_dir} {wheel} --exclude libtorch_python.so"
          CIBW_BUILD: "cp38-manylinux_x86_64 cp39-manylinux_x86_64 cp310-manylinux_x86_64 cp311-manylinux_x86_64"
        with:
          output-dir: wheelhouse

      - name: Sync wheels to IBM COS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.COS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.COS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-south-1
        run: |
          which aws || pip install awscli --upgrade
          aws s3 sync wheelhouse/ s3://${{ env.COS_BUCKET }}/ \
            --acl public-read \
            --delete \
            --endpoint-url https://${{ env.COS_ENDPOINT }}

  build-and-deploy-macos:
    name: Build & Deploy wheels (macOS)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Cleanup runner
        run: |
          pip cache purge
          sudo rm -rf /var/lib/apt/lists/*

      - name: Set up Environment
        run: |
          brew install openblas
          brew link --force openblas

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.3
        env:
          CIBW_ENVIRONMENT: "TORCH_VERSION_SPECIFIER='>=2.1'"
          CIBW_BEFORE_BUILD: "pip install torch>=2.1 torchvision -f https://download.pytorch.org/whl/torch_stable.html && pip install -r requirements.txt"
          CIBW_REPAIR_WHEEL_COMMAND: "auditwheel repair -w {dest_dir} {wheel} --exclude libtorch_python.so"
          CIBW_ARCHS: x86_64
          CIBW_BUILD: "cp38-macosx_x86_64 cp39-macosx_x86_64 cp310-macosx_x86_64"
        with:
          output-dir: wheelhouse

      - name: Sync wheels to IBM COS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.COS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.COS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-south-1
        run: |
          which aws || pip install --no-cache-dir awscli --upgrade
          aws s3 sync wheelhouse/ s3://${{ env.COS_BUCKET }}/ \
            --acl public-read \
            --delete \
            --endpoint-url https://${{ env.COS_ENDPOINT }}

  # build-and-deploy-windows:
  #   name: Build & Deploy wheels (Windows)
  #   runs-on: windows-latest
  #   env:
  #     CIBW_ENVIRONMENT: "TORCH_VERSION_SPECIFIER='==2.4.1'"
  #     CIBW_BEFORE_BUILD: "pip install torch==2.4.1 && pip install -r requirements.txt"
  #     CIBW_BUILD: "cp38-win_amd64 cp39-win_amd64 cp310-win_amd64"
  #     OPENBLAS_ROOT:  C:\\BLAS
  #     OPENBLAS_ROOT_DIR: C:\\BLAS
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Install Python & BLAS
  #       run: |
  #         choco install python --version=3.8.6 -y
  #         SET PATH=C:\Python38;C:\Python38\Scripts;%PATH%
  #         mkdir C:\BLAS
  #         Invoke-WebRequest -Uri https://github.com/xianyi/OpenBLAS/releases/download/v0.3.12/OpenBLAS-0.3.12-x64.zip -OutFile openblas.zip
  #         Expand-Archive openblas.zip -DestinationPath C:\BLAS

  #     - name: Install cibuildwheel
  #       run: python -m pip install cibuildwheel==2.8.1

  #     - name: Build wheels
  #       run: python -m cibuildwheel --output-dir wheelhouse

  #     - name: Sync wheels to IBM COS
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.COS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.COS_SECRET_ACCESS_KEY }}
  #         AWS_DEFAULT_REGION: us-south-1
  #       run: |
  #         which aws || pip install awscli --upgrade
  #         aws s3 sync wheelhouse/ s3://${{ env.COS_BUCKET }}/ \
  #           --acl public-read \
  #           --delete \
  #           --endpoint-url https://${{ env.COS_ENDPOINT }}
